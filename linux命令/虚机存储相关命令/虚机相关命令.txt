1. 核心的系统日志文件：/var/log/message(CentOS) 或者 /var/log/syslog (Ubuntu) 直接vim打开该message查看即可
   该模块是Linux内核消息及各种应用程序的公共日志信息，包括启动、IO错误、网络错误、程序故障等。





2. OOM

Linux下有一种OOM KILLER 的机制，它会在系统内存耗尽的情况下，启用自己算法有选择性的kill 掉一些进程。
　　1. 为什么会有OOM killer
　　当我们使用应用时，需要申请内存，即进行malloc的操作，进行malloc操作如果返回一个非NULL的操作表示申请到了可用的内存。事实上，这个地方是可能存在bug的。Linux有一种内存优化机制，即：允许程序申请比系统可用内存更多的内存，但是Linux并不保证这些内存马上可用，如果凑巧你申请到的内存中在你需要使用的时候还没有完全释放出来，这个时候就会触发OOM killer了。内核代码为：mm/oom_kill.c，其调用顺序为：
　　malloc -> _alloc_pages -> out_of_memory() -> select_bad_process() -> badness()
　　2. 如何选择要kill掉的进程
　　分析badness代码，其选择过程如下：
　　1）计算该进程以及其子进程所占用的内存；
　　2）计算CPU时间和存活时间
　　3）做相应的权重调整
　　总结起来，就是占用内存越高，得分越高，cpu时间和存活时间越高，得分越低；进程优先级越高，得分越低
　　综合上述因素后，会得到一个point的值，得分最高的会被选中，然后被kill掉。


3. free命令
free -h 输出内存信息
free -h -s 3   每隔3秒输出一次内存信息

下面先解释一下输出的内容：
Mem 行(第二行)是内存的使用情况。
Swap 行(第三行)是交换空间的使用情况。
total 列显示系统总的可用物理内存和交换空间大小。
used 列显示已经被使用的物理内存和交换空间。
free 列显示还有多少物理内存和交换空间可用使用。
shared 列显示被共享使用的物理内存大小。
buff/cache 列显示被 buffer 和 cache 使用的物理内存大小。
available 列显示还可以被应用程序使用的物理内存大小。

4. 查看内存占用情况
du -h /var/log/ --max-depth=1     :查看/var/log 目录下内存占用情况

5. 获取docker的短id

docker ps -a 可以看到
clone模块发布： 在hn02 管理机上面执行 ssh root@172.27.5.103

./generate_idun_conf.py hn02 3102 tcp raw ssd   //生成配置
./generate_hela_conf.py hn02 3102 tcp raw ssd
./generate_freyr_conf.py hn02 3102 tcp raw ssd

./generate_ip_list.py hn02 3102    //生成所有模块的ip
./release.sh idun 21.01.12-b0e69d7-centos7-x86_64 idun_ips fast
./release.sh hela 21.01.12-b0e69d7-centos7-x86_64 /root/limax/udisk/region/hn02/3102/host_info fast
./release.sh freyr 21.01.12-b0e69d7-centos7-x86_64 /root/limax/udisk/region/hn02/3102/host_info fast


测试：

罗唐(tang.luo) 1-25 16:11:56
ssh root@172.27.118.195

罗唐(tang.luo) 1-25 16:16:20
[root@hn02-udisk-support release]# pwd
/root/limax/udisk/tool/release

clone测试机器: ssh root@172.27.118.195
/root/ymer_auto_test_hn06/scripts/batch_clone.sh  发起测试

  全部发布的脚本： release_all.sh

# 编译后拷贝

[hongwei.liu@shpre01-udisk-150-123 chaos]$ docker cp 6d2723a48ee5:/root/ymer/build/hela/hela-21.01.27-0fbebfb-centos7-x86_64 ./
[hongwei.liu@shpre01-udisk-150-123 chaos]$ docker cp 6d2723a48ee5:/root/ymer/build/idun/idun-21.01.27-0fbebfb-centos7-x86_64 ./
[hongwei.liu@shpre01-udisk-150-123 chaos]$ docker cp 6d2723a48ee5:/root/ymer/build/freyr/freyr-21.01.27-0fbebfb-centos7-x86_64 ./



# 建立docker容器

这个是通用的docker容器

docker run -d --name compile.hongwei.liu --hostname compile-hongwei-liu  -it centos7.4.udisk.compile.dev:v20-05-06  创建容器
docker start compile.hongwei.liu   启动容器
docker exec -it compile.hongwei.liu scl enable devtoolset-8 bash  进入容器
cd .ssh/   删除里面的key

# 编译

/root/ymer目录下执行  git submodule update --init

./do_cmake.sh       # 生成cmake
$ cd build            # 进入编译目录
$ make -j8            # 多线程编译ymer
$ make install        # 安装到publish目录


编译message ：
cd message  ./dep-rapid-make.sh 

# ymer部署
https://git.ucloudadmin.com/block/udisk_doc/-/wikis/Ymer%E9%95%9C%E5%83%8FP2P%E5%88%86%E5%8F%91%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2%E6%94%BB%E7%95%A5


./node-tester.js --host 10.189.149.135 --port 6000 --key ucloud.utimemachine.koala_access_clone_netdisk_image_request vdisk_id="hongwei_hn08220G_image" ubs_id="bsr-4f20cjbm" vdisk_cap=220 top_oid="50140849" oid="55741713"



/root/limax/udisk/libs/fastcall.py



chunk id  uuid 


 chunk_id(40) write mbps(183)
 chunk_id(41) write mbps(193)
 chunk_id(42) write mbps(197)
 chunk_id(43) write mbps(191)
 chunk_id(44) write mbps(183)
 chunk_id(45) write mbps(201)
 chunk_id(46) write mbps(191)
 chunk_id(47) write mbps(189)
 chunk_id(40) read mbps(182)
 chunk_id(41) read mbps(183)
 chunk_id(42) read mbps(182)
 chunk_id(43) read mbps(183)
 chunk_id(44) read mbps(183)
 chunk_id(45) read mbps(180)
 chunk_id(46) read mbps(183)
 chunk_id(47) read mbps(183)


total_write_local_count(11507888) total_read_local_count(4692330) total_read_remote_count(6278953)

total_write_local_count(11513578) total_read_local_count(4698002) total_read_remote_count(6278961) 

total_write_local_count(11519797) total_read_local_count(4703962) total_read_remote_count(6278972)

 20210308 18:44:16  total_write_local_count(11526001) total_read_local_count(4709953) total_read_remote_count(6278979)

 20210308 18:44:17 total_write_local_count(11531624) total_read_local_count(4715555) total_read_remote_count(6278986)














ssh root@172.27.118.195 -i id_rsa


ssh 172.27.118.195    //当前机器是什么权限登录172.27.118.195就是什么权限登录
如果在0.0.0.机器的用户权限是 hongwei.liu  那么执行上面的命令相当于 ssh hongwei.liu@172.27.118.195
 





目前熟悉ymer相关流程感觉存在的难点：

1. 每一个ymer模块里面有很多的文件，不清楚这个文件是什么作用，只能通过文件名字去猜测(准备去问一下罗唐哥，介绍每一个文件的大体作用是什么)

2. ymer相关文档只有一个时序调度图以及每个模块之间粗略的交互，阅读难度较大，对于细化每个模块内部的具体函数调用以及功能没有太大帮助

3. 在看相关代码的时候不知道类里面的结构体以及变量的作用含义以及在clone过程中的状态转换

4. 各个模块之间的交互点还不清楚比如fryer如何将clone请求下发给hela

5. fryer、hela管理上下文模块的变量以及结构体信息不太清晰，管理上下文模块在clone的流程非常重要

6. 部分定时任务以及注册的回调函数比较杂乱不清楚在什么时候调用是怎么调用的



一.  熟悉ymer相关模块计划：

阶段一：熟悉整体clone流程的每一个模块需要做什么有什么功能以及粗略的代码调用流程



1 Access模块      了解Access在Clone的过程中需要做什么(查镜像原盘、选set)


2 Metaserver模块  了解Metaserver在Clone的过程中需要做什么(创建盘、向方舟注册vdisk、选Fryer)


3. Fryer模块(目前clone流程的函数调用流程已经梳理出来，通过函数名函数所在的行数以及文件名和函数的调用来梳理)

p2p模型clone：方舟向chunk推数据

非p2p模型clone：Fryer向hela分发任务，由hela向chunk、ark读取数据后写到hela所在的chunk上面


4. Hela模块：向chunk、ark读取数据后写到hela所在的本地chunk(由于测试chunk限制hela队列所以目前在看hela读写chunk相关流程)



5. Idun模块：管理clone的进度(暂时还未看)


6. 所有模块完整的clone日志流程梳理

阶段二：熟悉整体clone流程的详细代码




二、 c++相关知识学习
 
 1. 学习Effective c++ 以及c++相关基础知识  目前已经看完1/3

 2. muduo net库学习 目前已看完1/6









manager 配置文件：


 {
  "common": {
    "listen_port": 6003,
    "超时时间设置": "超时时间设置，给Loki发送请求 LokiRepairChunkPrepareRequest 耗时较长，此处设置超时时间为20min",
    "request_timeout": 1200,
    "internal_url": "http://internal.api.ucloud.cn",
    "external_url": "http://163.177.145.190:5009"
  },
  "log": {
    "log_dir": "/root/chaos/chaos-hn08-5009/log",
    "log_prefix": "manager",
    "log_suffix": ".log",
    "log_size": 50,
    "log_level": "DEBUG",
    "log_func_file_line": true
  },
  "chaos_env":{
    "mongodbIpPort": "mongodb://163.177.145.190:1970",
    "db_name": "chaoseris_hn08_5009",
    "kill_chunk_iplist": "10.189.152.70,10.189.152.130,10.189.152.131,10.189.152.132,10.189.152.133,10.189.152.66",
    "kill_block_get_iplist": ""
  },
  "udisk_env":{
    "zk_addr" : "10.189.151.14:2181,10.189.151.15:2181,10.189.151.16:2181,10.189.151.17:2181,10.189.151.18:2181",
    "access_path": "/NS/udisk/global/access",
    "global_zk_addr": "10.189.151.14:2181,10.189.151.15:2181,10.189.151.16:2181,10.189.151.17:2181,10.189.151.18:2181",
    "metaserver_path" : "/NS/udisk/set5009/metaserver",
    "mongodbIpPort": "mongodb://10.189.151.130:27020",
    "loki_ip": "10.189.151.130",
    "loki_port": 32500,
    "thor_ip": "172.18.210.88",
    "thor_port": 22500
  }
}

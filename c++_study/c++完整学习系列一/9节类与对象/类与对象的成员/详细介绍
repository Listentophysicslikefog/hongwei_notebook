# https://www.jianshu.com/p/240885a9b1c5

类与对象的成员：

内联函数
常数据成员
常成员函数
静态数据成员
静态成员函数
静态常数据成员
友元函数与友元类

1. 内联函数

目的：程序优化，展开函数代码而不是调用
内联函数使用的注意事项
－在函数定义前添加inline关键字，仅在函数原型前使用此关
　键字无效
－编译器必须能看见内联函数的代码才能在编译期展开，因而内联函数必须实现在头文件中
－在类定义中给出函数体的成员函数自动成为内联函数，就是在类里面写函数然后再加花括号函数体，将函数实现写在类里面。

列：

class A{
public:
int a;
print(){
    cout<<a;
};

}
－函数体代码量较大，或包含循环，不要使用内联
－构造函数和析构函数有可能隐含附加操作，慎用内联
－内联函数仅是建议，编译器会自主选择是否内联

2. 常数据成员

常数据成员：值在程序运行期间不可变
－定义格式：const  类型  数据成员名称;
－初始化：只能通过构造函数中的初始化列表进行

使用示例
   class A
   {
　public:
 　 A( int a );
　private:
　  const int num;
　};

　A::A( int a ) : num(a) { …… };


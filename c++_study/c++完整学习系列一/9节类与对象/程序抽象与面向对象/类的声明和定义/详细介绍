
1. 类声明：仅声明类的存在，没有提供细节，这种称为前置声明
－关键字：class
－示例：class A;

2. 类定义
－一般定义格式
－类成员：数据与函数
－三个保留字顺序任意
－public：其后成员公开be
－protected：其后成员有限公开
－private：其后成员私有，仅本对象可直接访问

3. 类类型的声明

仅限于函数原型使用类类型的声明
不能用于定义类的数据成员
示　例
　class B;  //前置声明，没有定义，只是声明了
　class A
　{
　public:
 　 void func( B b );  // 正确，可以使用这个类类型
　private:
 　 B b;  // 错误   ，前置声明B类没有定义（不知道成员）所以不能够声明对象，声明对象需要分配内存空间，但是分配模式我们不知道
　};
　class B{ … };



4. https://blog.csdn.net/qq_26849233/article/details/70799827

首先说明这三种访问控制符各自的访问控制特点，指出这三种控制符声明的变量可以被哪些实体访问：
    （1）public成员：能被本类的成员函数（不管是哪一种控制符声明的成员函数，都可以）、友元函数、本类的对象、其派生类的成员函数（不管是哪一种控制符声明的成员函数，都可以）；
    （2）protected成员：能被本类的成员函数（不管是哪一种控制符声明的成员函数，都可以）、友元函数、其派生类的成员函数（不管是哪一种控制符声明的成员函数，都可以）；
    （3）private成员：能被本类的成员函数（不管是哪一种控制符声明的成员函数，都可以）、友元函数；
通过以上介绍，可以总结为：
    （1）对类的用户而言，即使用类对象实例的人（还有一种说法就是指只能看到类的头文件的人，因为设计类的人都将他写的实现文件编译成了二进制文件，在Windows下是.lib、.obj后缀的文件），通过类对象实例，只能访问到类的public成员（函数或变量）；
    （2）对类本身而言，即类的设计者，在设计类的过程中，他可以通过类的所有的成员函数（三种控制符声明），或者友元函数访问其类内部所有的成员（函数或变量），不管其要该成员（函数或变量）是用哪一种控制符声明的，都可以访问。
    （3）对该类的派生类而言，到这里只能说基类的public、protected的成员对它来说是可见的，即可以访问，但具体怎么访问，这涉及到了C++类继承的知识，接下来会重点解释这一条。

三、C++访问控制与继承
    在一个继承体系中，会涉及到两层访问控制符，一层在类的派生列表中，另一层则是在基类中。庞大而复杂的继承体系看起来是不好理解的（其实也确实不好理解，哈哈），但它归根结底是单层继承的扩展，所以这里我就以单层public继承结构来说明C++访问控制与继承的关系，继承结构为Drived  ：public Base。
    既然这里涉及到继承，那先必须要理解的一点就是C++继承体系中派生类的对象模型，这在C++Primer和《深度探索C++对象模型》都有解释，即派生类的内存模型主要包括两部分：基类部分和派生类部分，其中基类部分是从基类继承而来的，派生类部分是自己定义的。
    上述第一层访问控制符（即派生列表中）影响的是派生类中基类部分成员（函数或变量）的访问控制权限（也仅仅只有这一点影响），具体的影响为：
        （1）public继承（保持不变）：派生类中基类部分的成员（函数或变量）的访问控制权限和其在基类中声明的权限一样；
        （2）protected继承（各自降低一个权限）：基类中public成员在派生类中变成protected权限，其他成员都变为private权限；
        （3）private继承（全部私有化）：派生类中基类部分的成员（函数或变量）的访问控制权限全部变为private成员。
好，现在解释了第一层访问控制符，那么派生类中所有成员（基类部分由上面的可以解释，派生类部分本身就已经声明）的访问控制权限都确定了，那现在的问题就是能不能访问了。
    针对这里的单层public继承结构的例子，基类部分的成员的访问控制权限保持不变，下面分三种情况进行解释：
        （1）基类部分的public成员。请注意，尽管派生类的内存模型分为两部分，但这两部分都属于派生类对象。所以派生类（类本身）的所有成员函数（不管哪一种访问控制符）都能访问基类部分的public成员（函数或变量），同时派生类对象也直接可以访问（通过成员访问操作符）。
        （2）基类部分的protected成员。派生类（类本身）的所有成员函数（不管哪一种访问控制符）都能访问基类部分的protected成员（函数或变量），但派生类对象不能直接访问（基类对象自己都不能访问它的protected成员，派生类当然不可以）。
        （3）基类部分的private成员。派生类（类本身）的所有成员函数（不管哪一种访问控制符）都不能访问基类部分的private成员（函数或变量），同样派生类对象也不能直接访问。
下面对以上三种情况在VS2010中进行测试，这里只进行编辑，VS2010自动检错功能就能提示相应错误
线程基本概念
线程管理
线程创建，线程撤销，线程属性，线程局部存储，线程清除
线程同步机制
互斥、死锁、信号量、条件变量
C++11线程库

一：***********************
1.线程的定义
线程是比进程更小的程序执行单位
多个线程可共享全局数据，也可使用专有数据，线程有自己独立的栈共享进程的堆。

2. 内核线程
操作系统内核支持多线程调度与执行
内核线程使用资源较少，仅包括内核栈和上下文切换时需要的保存寄存器内容的空间

3. 轻量级进程（lightweight process，LWP）
由内核支持的独立调度单元，调度开销小于普通的进程
系统支持多个轻量级进程同时运行，每个都与特定的内核线程相关联

4. 用户线程（真正开发我们写的线程）
建立在用户空间的多个用户级线程，映射到轻量级进程后调度执行
用户线程在用户空间创建、同步和销毁，开销较低
每个线程具有独特的ID
使用说明
线程功能不属于C/C++标准库，链接时需用-pthread选项
线程功能属于C++11标准库，可用C++11提供的thread类定义线程对象，C++11标准库同时提供基本的线程同步机制

5. 进程与线程的比较
线程空间不独立，有问题的线程会影响其他线程；进程空间独立，有问题的进程一般不会影响其他进程
创建进程需要额外的性能开销
线程用于开发细颗粒度并行性，进程用于开发粗颗粒度并行性
线程容易共享数据，进程共享数据必须使用进程间通讯机制

二. 线程管理

线程创建
线程函数参数与返回值
线程ID
线程属性
线程撤销
线程局部存储
线程清除















